// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Book struct {
	Api                  string   `protobuf:"bytes,1,opt,name=Api,proto3" json:"Api,omitempty"`
	BookID               int64    `protobuf:"varint,2,opt,name=BookID,proto3" json:"BookID,omitempty"`
	BookName             string   `protobuf:"bytes,3,opt,name=BookName,proto3" json:"BookName,omitempty"`
	BookAuthor           string   `protobuf:"bytes,4,opt,name=BookAuthor,proto3" json:"BookAuthor,omitempty"`
	Pages                int64    `protobuf:"varint,5,opt,name=Pages,proto3" json:"Pages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *Book) GetBookID() int64 {
	if m != nil {
		return m.BookID
	}
	return 0
}

func (m *Book) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func (m *Book) GetBookAuthor() string {
	if m != nil {
		return m.BookAuthor
	}
	return ""
}

func (m *Book) GetPages() int64 {
	if m != nil {
		return m.Pages
	}
	return 0
}

type ReadBookRecordReq struct {
	Api                  string   `protobuf:"bytes,1,opt,name=Api,proto3" json:"Api,omitempty"`
	BookID               string   `protobuf:"bytes,2,opt,name=BookID,proto3" json:"BookID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadBookRecordReq) Reset()         { *m = ReadBookRecordReq{} }
func (m *ReadBookRecordReq) String() string { return proto.CompactTextString(m) }
func (*ReadBookRecordReq) ProtoMessage()    {}
func (*ReadBookRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *ReadBookRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadBookRecordReq.Unmarshal(m, b)
}
func (m *ReadBookRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadBookRecordReq.Marshal(b, m, deterministic)
}
func (m *ReadBookRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadBookRecordReq.Merge(m, src)
}
func (m *ReadBookRecordReq) XXX_Size() int {
	return xxx_messageInfo_ReadBookRecordReq.Size(m)
}
func (m *ReadBookRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadBookRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadBookRecordReq proto.InternalMessageInfo

func (m *ReadBookRecordReq) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadBookRecordReq) GetBookID() string {
	if m != nil {
		return m.BookID
	}
	return ""
}

type ReadAllBookResp struct {
	Api                  string   `protobuf:"bytes,1,opt,name=Api,proto3" json:"Api,omitempty"`
	Book                 []*Book  `protobuf:"bytes,2,rep,name=book,proto3" json:"book,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllBookResp) Reset()         { *m = ReadAllBookResp{} }
func (m *ReadAllBookResp) String() string { return proto.CompactTextString(m) }
func (*ReadAllBookResp) ProtoMessage()    {}
func (*ReadAllBookResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *ReadAllBookResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllBookResp.Unmarshal(m, b)
}
func (m *ReadAllBookResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllBookResp.Marshal(b, m, deterministic)
}
func (m *ReadAllBookResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllBookResp.Merge(m, src)
}
func (m *ReadAllBookResp) XXX_Size() int {
	return xxx_messageInfo_ReadAllBookResp.Size(m)
}
func (m *ReadAllBookResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllBookResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllBookResp proto.InternalMessageInfo

func (m *ReadAllBookResp) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllBookResp) GetBook() []*Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type ReadAllBookReq struct {
	Api                  string   `protobuf:"bytes,1,opt,name=Api,proto3" json:"Api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllBookReq) Reset()         { *m = ReadAllBookReq{} }
func (m *ReadAllBookReq) String() string { return proto.CompactTextString(m) }
func (*ReadAllBookReq) ProtoMessage()    {}
func (*ReadAllBookReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *ReadAllBookReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllBookReq.Unmarshal(m, b)
}
func (m *ReadAllBookReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllBookReq.Marshal(b, m, deterministic)
}
func (m *ReadAllBookReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllBookReq.Merge(m, src)
}
func (m *ReadAllBookReq) XXX_Size() int {
	return xxx_messageInfo_ReadAllBookReq.Size(m)
}
func (m *ReadAllBookReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllBookReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllBookReq proto.InternalMessageInfo

func (m *ReadAllBookReq) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func init() {
	proto.RegisterType((*Book)(nil), "v1.Book")
	proto.RegisterType((*ReadBookRecordReq)(nil), "v1.ReadBookRecordReq")
	proto.RegisterType((*ReadAllBookResp)(nil), "v1.ReadAllBookResp")
	proto.RegisterType((*ReadAllBookReq)(nil), "v1.ReadAllBookReq")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x25, 0x49, 0x5b, 0xda, 0x5b, 0x78, 0xaf, 0x6f, 0x5e, 0x95, 0x31, 0x14, 0x0d, 0xb3, 0x90,
	0x22, 0xb6, 0x21, 0x75, 0x27, 0xb8, 0x88, 0x16, 0xc4, 0x8d, 0x48, 0x44, 0x70, 0x3b, 0x6d, 0x2f,
	0x31, 0x34, 0x66, 0xc6, 0x24, 0xc6, 0x7d, 0x7f, 0xc1, 0x4f, 0xf1, 0x53, 0xfc, 0x05, 0x3f, 0x44,
	0x66, 0x62, 0xdb, 0x48, 0x0b, 0xdd, 0x9d, 0x7b, 0xcf, 0xb9, 0x67, 0xee, 0xb9, 0x0c, 0xc0, 0x44,
	0x88, 0xf9, 0x50, 0xa6, 0x22, 0x17, 0xc4, 0x2c, 0x3c, 0xfb, 0x54, 0xc3, 0xe9, 0x20, 0xc4, 0x64,
	0x90, 0xbd, 0xf1, 0x30, 0xc4, 0xd4, 0x15, 0x32, 0x8f, 0x44, 0x92, 0xb9, 0x3c, 0x49, 0x44, 0xce,
	0x35, 0x2e, 0x27, 0xec, 0x5e, 0x28, 0x44, 0x18, 0xa3, 0xcb, 0x65, 0xb4, 0xc9, 0xb2, 0x85, 0x01,
	0xb5, 0x4b, 0x21, 0xe6, 0xa4, 0x03, 0x96, 0x2f, 0x23, 0x6a, 0x38, 0x46, 0xbf, 0x15, 0x28, 0x48,
	0xf6, 0xa1, 0xa1, 0x98, 0x9b, 0x31, 0x35, 0x1d, 0xa3, 0x6f, 0x05, 0x3f, 0x15, 0xb1, 0xa1, 0xa9,
	0xd0, 0x2d, 0x7f, 0x46, 0x6a, 0x69, 0xf9, 0xaa, 0x26, 0x87, 0x00, 0x0a, 0xfb, 0xaf, 0xf9, 0x93,
	0x48, 0x69, 0x4d, 0xb3, 0x95, 0x0e, 0xe9, 0x42, 0xfd, 0x8e, 0x87, 0x98, 0xd1, 0xba, 0xb6, 0x2c,
	0x0b, 0x76, 0x01, 0xff, 0x02, 0xe4, 0x33, 0xa5, 0x0b, 0x70, 0x2a, 0xd2, 0x59, 0x80, 0x2f, 0x3b,
	0x17, 0x6a, 0x2d, 0x17, 0x62, 0x3e, 0xfc, 0x55, 0xe3, 0x7e, 0x1c, 0x97, 0x0e, 0x99, 0xdc, 0x32,
	0xdc, 0x83, 0x9a, 0x3a, 0x23, 0x35, 0x1d, 0xab, 0xdf, 0x1e, 0x35, 0x87, 0x85, 0x37, 0xd4, 0x6a,
	0xdd, 0x65, 0x0c, 0xfe, 0xfc, 0xb2, 0xd8, 0xf2, 0xfc, 0xe8, 0xc3, 0x84, 0xb6, 0x62, 0xef, 0x31,
	0x2d, 0xa2, 0x29, 0x92, 0x6b, 0xe8, 0x5c, 0xa5, 0xc8, 0x73, 0x5c, 0xef, 0x4d, 0x56, 0xbe, 0xf6,
	0x0a, 0xb1, 0xa3, 0xc5, 0xe7, 0xd7, 0xbb, 0x79, 0xc0, 0xba, 0x6e, 0xe1, 0xb9, 0xea, 0xb5, 0xac,
	0x34, 0xd0, 0xf8, 0xdc, 0x38, 0x21, 0xc7, 0xd0, 0x79, 0x90, 0xb3, 0x9d, 0x46, 0x4a, 0x37, 0xc6,
	0x18, 0x77, 0xea, 0xbc, 0x32, 0x4c, 0x45, 0xb5, 0xa7, 0xb8, 0x8d, 0x13, 0x57, 0x46, 0x1e, 0xa1,
	0x5d, 0xc9, 0x4f, 0xc8, 0x52, 0xbf, 0x3e, 0x88, 0xfd, 0x7f, 0xa3, 0x97, 0x49, 0xe6, 0xe8, 0x6c,
	0x36, 0xa1, 0xdb, 0xb2, 0xb9, 0x3c, 0x8e, 0x27, 0x0d, 0xfd, 0xcf, 0xce, 0xbe, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xce, 0x62, 0x8b, 0x05, 0xc5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookServiceClient is the client API for BookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookServiceClient interface {
	CreateBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error)
	UpdateBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error)
	DeleteBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error)
	ReadBookRecord(ctx context.Context, in *ReadBookRecordReq, opts ...grpc.CallOption) (*Book, error)
	ReadAllBook(ctx context.Context, in *ReadAllBookReq, opts ...grpc.CallOption) (*ReadAllBookResp, error)
}

type bookServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookServiceClient(cc *grpc.ClientConn) BookServiceClient {
	return &bookServiceClient{cc}
}

func (c *bookServiceClient) CreateBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/v1.BookService/CreateBookRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) UpdateBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/v1.BookService/UpdateBookRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) DeleteBookRecord(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/v1.BookService/DeleteBookRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) ReadBookRecord(ctx context.Context, in *ReadBookRecordReq, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/v1.BookService/ReadBookRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) ReadAllBook(ctx context.Context, in *ReadAllBookReq, opts ...grpc.CallOption) (*ReadAllBookResp, error) {
	out := new(ReadAllBookResp)
	err := c.cc.Invoke(ctx, "/v1.BookService/ReadAllBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookServiceServer is the server API for BookService service.
type BookServiceServer interface {
	CreateBookRecord(context.Context, *Book) (*Book, error)
	UpdateBookRecord(context.Context, *Book) (*Book, error)
	DeleteBookRecord(context.Context, *Book) (*Book, error)
	ReadBookRecord(context.Context, *ReadBookRecordReq) (*Book, error)
	ReadAllBook(context.Context, *ReadAllBookReq) (*ReadAllBookResp, error)
}

func RegisterBookServiceServer(s *grpc.Server, srv BookServiceServer) {
	s.RegisterService(&_BookService_serviceDesc, srv)
}

func _BookService_CreateBookRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Book)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).CreateBookRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BookService/CreateBookRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).CreateBookRecord(ctx, req.(*Book))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_UpdateBookRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Book)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).UpdateBookRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BookService/UpdateBookRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).UpdateBookRecord(ctx, req.(*Book))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_DeleteBookRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Book)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).DeleteBookRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BookService/DeleteBookRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).DeleteBookRecord(ctx, req.(*Book))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_ReadBookRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBookRecordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).ReadBookRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BookService/ReadBookRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).ReadBookRecord(ctx, req.(*ReadBookRecordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_ReadAllBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllBookReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).ReadAllBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BookService/ReadAllBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).ReadAllBook(ctx, req.(*ReadAllBookReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.BookService",
	HandlerType: (*BookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBookRecord",
			Handler:    _BookService_CreateBookRecord_Handler,
		},
		{
			MethodName: "UpdateBookRecord",
			Handler:    _BookService_UpdateBookRecord_Handler,
		},
		{
			MethodName: "DeleteBookRecord",
			Handler:    _BookService_DeleteBookRecord_Handler,
		},
		{
			MethodName: "ReadBookRecord",
			Handler:    _BookService_ReadBookRecord_Handler,
		},
		{
			MethodName: "ReadAllBook",
			Handler:    _BookService_ReadAllBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "book.proto",
}
